import Stock from '@app/model/Stock';
import {Configuration} from '@app/container/config';
import axios from 'axios';

interface IPurchase {
    product: string,
    qty: number,
}

export class PurchaseService {
    private appConfig: Configuration;

    constructor({appConfig}: {appConfig: Configuration}) {
        this.appConfig = appConfig;
    }

    public async addStock (purchases: [IPurchase]) {
        let stockCard = [];
        for (const purchase of purchases) {
            const stock = new Stock({
                product: purchase.product,
                qty: Math.abs(purchase.qty),
                comment: `Generated by purchase`,
            });
            stockCard.push(stock);
        }
        await Stock.insertMany(stockCard);
    }

    public async purchaseFromFarmerMarket (productCode: string|undefined) {
        try {
            const response = await axios.get(`${this.appConfig.farmerMarketApi}/farmers-market/buy`, {
                params: {
                    ingredient: productCode,
                }
            });
            return response.data.quantitySold;
        } catch (error) {
            return 0;
        }
    }
}